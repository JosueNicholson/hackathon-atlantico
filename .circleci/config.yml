version: 2
jobs:
  build:
    working_directory: ~/folium-backend
    docker:
      - image: circleci/node:10.16.0
    steps:
      - checkout
      - run:
          name: Update NPM
          command: "sudo npm install -g npm@latest"
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Build Project
          command: npm run build
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - store_artifacts: # special step to save test results as as artifact
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results.xml
  test:
    working_directory: ~/folium-backend
    docker:
      - image: circleci/node:10.16.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: test
          command: npm test

  deploy-develop:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "77:96:65:32:66:14:5a:c3:4a:5e:f3:ad:58:92:f9:dd"
      - run:
          name: Deploy Project in Develop
          command: ssh $SSH_USER@$SSH_HOST "~/folium-development/scripts/deploy.sh"

  deploy-prod:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "77:96:65:32:66:14:5a:c3:4a:5e:f3:ad:58:92:f9:dd"
      - run:
          name: Deploy Project in Production
          command: ssh $SSH_USER@$SSH_HOST "~/folium-production/scripts/deploy.sh"

workflows:
  version: 2
  build-and-deploy-on-hold:
    jobs:
      - build

      - test:
          requires:
            - build

      - hold:
          type: approval
          requires:
            - test
          filters:
            branches:
              only:
                - master

      - deploy-develop:
          requires:
            - build
            - test
          filters:
            branches:
              only: develop

      - deploy-prod:
          requires:
            - build
            - test
            - hold
          filters:
            branches:
              only: master
